{"ast":null,"code":"var _jsxFileName = \"/Users/angelomaraujo/gits/TabelaTurno_WORKDIR/TabelaTurno/src/tabela2.js\";\nimport React from 'react';\nimport tabelaGear from './tableGear';\nimport { trackEvent } from './analytics';\n\nDate.prototype.addDays = function (days) {\n  var date = new Date(this.valueOf());\n  date.setDate(date.getDate() + days);\n  return date;\n};\n\nfunction DateToStringFormated(date) {\n  return date.toLocaleDateString(\"pt\", {\n    day: \"2-digit\",\n    month: 'short'\n  }).replace(\" de \", \"/\").replace(\".\", \"\"); //  Remove period on end of month at Chrome browser;\n}\n\nfunction isSameDay(dateToCheck, dateToCheck2) {\n  return dateToCheck.getDate() === dateToCheck2.getDate() && dateToCheck.getMonth() === dateToCheck2.getMonth() && dateToCheck.getFullYear() === dateToCheck2.getFullYear();\n}\n\nfunction isToday(dateToCheck) {\n  return isSameDay(dateToCheck, new Date());\n}\n\nconst weekDay = [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"SÃ¡b\"];\n\nconst styleClassDay = function styleClassDay(inProp) {\n  let redThing = ['F', 0, 6];\n  return redThing.includes(inProp) ? \"tdF\" : \"\";\n};\n\nconst styleClassWeekDay = function styleClassWeekDay(inProp) {\n  let trClassList = {\n    0: 'trSunday',\n    1: 'trMonday',\n    2: 'trTuesday',\n    3: 'trWednesday',\n    4: 'trThursday',\n    5: 'trFriday',\n    6: 'trSaturday'\n  };\n  return trClassList[inProp.getDay()];\n};\n\nconst styleClassToday = function styleClassToday(inProp) {\n  return isToday(inProp) ? \"tdToday\" : \"\";\n};\n\nconst eventClick = function eventClick(inLog) {\n  console.log(\"Click:\" + inLog);\n  trackEvent('Click', inLog, 'label2');\n  return true;\n};\n\nconst yearTD = day => /*#__PURE__*/React.createElement(\"th\", {\n  className: 'tdDate',\n  onClick: () => eventClick(\"Ano\" + day.getFullYear()),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 25\n  }\n}, day.getFullYear());\n\nconst weekDayTD = day => {\n  let wd = day.getDay();\n  let weekLabel = weekDay[wd].toUpperCase();\n  return /*#__PURE__*/React.createElement(\"td\", {\n    className: [styleClassDay(wd), 'tdWeekCol'].join(' '),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 12\n    }\n  }, weekLabel);\n};\n\nconst dayTDfunc = day => day.schedule.map((scale, i) => /*#__PURE__*/React.createElement(\"td\", {\n  key: i,\n  className: ['tdDayCol' + i, styleClassDay(scale)].join(' '),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 21\n  }\n}, scale));\n\nfunction thGroupClick(i, groupName) {\n  //alert(i + 'aab:' + groupName);\n  document.querySelectorAll('.tdDayCol' + i).forEach(function (el) {\n    el.classList.toggle('backSelected');\n  });\n  eventClick(\"Grupo \" + groupName);\n}\n\nconst groupsTD = groups => groups.map((groupName, i) => /*#__PURE__*/React.createElement(\"th\", {\n  key: i,\n  onClick: () => {\n    thGroupClick(i, groupName);\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }\n}, groupName));\n\nconst daysTR = daysIn => daysIn.map((day, i) => /*#__PURE__*/React.createElement(\"tr\", {\n  key: i,\n  className: [styleClassWeekDay(day.day), 'trTable'].join(' '),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(\"td\", {\n  key: i,\n  className: ['tdDate', styleClassToday(day.day)].join(' '),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }\n}, \" \", DateToStringFormated(day.day)), weekDayTD(day.day), dayTDfunc(day)));\n/* <th>{objMonthScales[0].day.toLocaleDateString(\"pt\")}</th> */\n\n\nconst monthTRHeader = objMonthScales => /*#__PURE__*/React.createElement(\"tr\", {\n  className: 'trHead',\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }\n}, yearTD(objMonthScales[0].day), /*#__PURE__*/React.createElement(\"th\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 13\n  }\n}, \"\\xA0\"), groupsTD(objMonthScales[0].groups));\n\nconst monthTRsComplete = daysIn => [monthTRHeader(daysIn), daysTR(daysIn)];\n\nconst tBodyTable = monthsTRsIn => /*#__PURE__*/React.createElement(\"tbody\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 39\n  }\n}, monthsTRsIn);\n\nfunction getDistFromBottom() {\n  var scrollPosition = window.pageYOffset;\n  var windowSize = window.innerHeight;\n  var bodyHeight = document.body.offsetHeight;\n  return Math.max(bodyHeight - (scrollPosition + windowSize), 0);\n}\n\nclass Tabela2 extends React.Component {\n  constructor(props) {\n    super(props);\n    const tableName = this.props.tableName;\n    this.setState({\n      tableEra: tableName\n    });\n    this.initTableComponent();\n  }\n\n  initTableComponent() {\n    const tableName = this.props.tableName;\n    tabelaGear.populateTableDate(tableName);\n    const dateIn = new Date(); // GetToday\n\n    const days = tabelaGear.getMonthScales(dateIn);\n    let beforeFirstMonthDay = new Date(dateIn.getFullYear(), dateIn.getMonth() - 1, 1);\n    let daysbefore = tabelaGear.getMonthScales(beforeFirstMonthDay);\n    this.state = {\n      tableInput: tableName,\n      dayOne: dateIn,\n      actualDay: dateIn,\n      monthsTRs: [monthTRsComplete(daysbefore), monthTRsComplete(days)]\n    };\n  }\n\n  tick() {\n    const dateIn = this.state.actualDay;\n    let nextFirstMonthDay = new Date(dateIn.getFullYear(), dateIn.getMonth() + 1, 1);\n    let nextMonthScale = tabelaGear.getMonthScales(nextFirstMonthDay);\n    this.setState({\n      monthsTRs: [...this.state.monthsTRs, monthTRsComplete(nextMonthScale)],\n      actualDay: nextFirstMonthDay\n    }); // Track month loading\n\n    let trackAction = dateIn.getFullYear() + \"-\" + (dateIn.getMonth() + 1);\n    console.log(trackAction);\n    trackEvent('Navigation', trackAction, 'label3');\n  }\n\n  handleScroll() {\n    let distToBottom = getDistFromBottom();\n\n    if (distToBottom > 0 && distToBottom <= 1400) {\n      // Near end;\n      let extTick = this.tick.bind(this);\n      extTick();\n    }\n  }\n\n  componentDidMount() {\n    //console.log(this.props.groupSelected);\n    let txtGroupSeleced = this.props.groupSelected;\n\n    if (txtGroupSeleced != undefined) {\n      var xpath = \"//th[text()='\" + txtGroupSeleced + \"']\";\n      var matchingElement = document.evaluate(xpath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n      matchingElement.click();\n      console.log(\"Mathing\");\n      console.log(matchingElement);\n    }\n\n    document.addEventListener('scroll', this.handleScroll.bind(this));\n    let timer = setTimeout(function () {\n      // Wait 50ms and set scrool to TODAY\n      window.scrollTo(0, document.getElementsByClassName(\"tdToday\")[0].offsetTop - 135); //era 88 \n    }, 50);\n    let extTick = this.tick.bind(this); // To use method in next line\n\n    extTick(); // Load next month as DidMount.\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.tableName !== prevProps.tableName) {\n      this.initTableComponent();\n      let extTick = this.tick.bind(this);\n      extTick();\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n\n      /* <div className=\"tbContainer\">*/\n      React.createElement(\"table\", {\n        className: 'tbMain',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      }, tBodyTable(this.state.monthsTRs))\n      /*</div>*/\n\n    );\n  }\n\n}\n\nTabela2.propTypes = {//classes: PropTypes.object.isRequired,\n};\nexport default Tabela2;","map":{"version":3,"sources":["/Users/angelomaraujo/gits/TabelaTurno_WORKDIR/TabelaTurno/src/tabela2.js"],"names":["React","tabelaGear","trackEvent","Date","prototype","addDays","days","date","valueOf","setDate","getDate","DateToStringFormated","toLocaleDateString","day","month","replace","isSameDay","dateToCheck","dateToCheck2","getMonth","getFullYear","isToday","weekDay","styleClassDay","inProp","redThing","includes","styleClassWeekDay","trClassList","getDay","styleClassToday","eventClick","inLog","console","log","yearTD","weekDayTD","wd","weekLabel","toUpperCase","join","dayTDfunc","schedule","map","scale","i","thGroupClick","groupName","document","querySelectorAll","forEach","el","classList","toggle","groupsTD","groups","daysTR","daysIn","monthTRHeader","objMonthScales","monthTRsComplete","tBodyTable","monthsTRsIn","getDistFromBottom","scrollPosition","window","pageYOffset","windowSize","innerHeight","bodyHeight","body","offsetHeight","Math","max","Tabela2","Component","constructor","props","tableName","setState","tableEra","initTableComponent","populateTableDate","dateIn","getMonthScales","beforeFirstMonthDay","daysbefore","state","tableInput","dayOne","actualDay","monthsTRs","tick","nextFirstMonthDay","nextMonthScale","trackAction","handleScroll","distToBottom","extTick","bind","componentDidMount","txtGroupSeleced","groupSelected","undefined","xpath","matchingElement","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","click","addEventListener","timer","setTimeout","scrollTo","getElementsByClassName","offsetTop","componentDidUpdate","prevProps","render","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport tabelaGear from './tableGear';\nimport { trackEvent } from './analytics';\n\n\n\n\nDate.prototype.addDays = function(days) {\n    var date = new Date(this.valueOf());\n    date.setDate(date.getDate() + days);\n    return date;\n}\n\nfunction DateToStringFormated(date) {\n    return date.toLocaleDateString(\"pt\", {\n        day: \"2-digit\",\n        month: 'short'\n    }).replace(\" de \", \"/\")\n      .replace(\".\",\"\"); //  Remove period on end of month at Chrome browser;\n}\n\nfunction isSameDay(dateToCheck, dateToCheck2) {\n    return (dateToCheck.getDate() === dateToCheck2.getDate() \n        && dateToCheck.getMonth() === dateToCheck2.getMonth()\n        && dateToCheck.getFullYear() === dateToCheck2.getFullYear());\n}\n\nfunction isToday(dateToCheck) {\n    return isSameDay(dateToCheck, (new Date()));\n}\n\nconst weekDay = [\"Dom\", \"Seg\", \"Ter\", \"Qua\", \"Qui\", \"Sex\", \"SÃ¡b\"];\n\nconst styleClassDay = function(inProp) {\n    let redThing = ['F', 0, 6];\n    return redThing.includes(inProp) ? \"tdF\" : \"\";\n};\n\nconst styleClassWeekDay = function(inProp) {\n    let trClassList = {0: 'trSunday', 1: 'trMonday', 2: 'trTuesday', 3: 'trWednesday', 4: 'trThursday', 5: 'trFriday', 6: 'trSaturday'};\n    return trClassList[inProp.getDay()]\n};\nconst styleClassToday = function(inProp) {\n    return isToday(inProp) ? \"tdToday\": \"\";\n}\nconst eventClick = function(inLog) {\n    console.log(\"Click:\" + inLog);\n    trackEvent('Click', inLog, 'label2');\n    return true;\n}\nconst yearTD = (day) => <th className={'tdDate'} onClick={() => eventClick(\"Ano\"+day.getFullYear())}>{day.getFullYear()}</th>;\nconst weekDayTD = (day) => {           \n    let wd = day.getDay();\n    let weekLabel = weekDay[wd].toUpperCase();\n    return <td className={[styleClassDay(wd), 'tdWeekCol'].join(' ')}>{weekLabel}</td>\n}\nconst dayTDfunc = (day) =>\n            day.schedule.map(\n                (scale, i) => \n                    <td key={i} className={['tdDayCol' + i, styleClassDay(scale)].join(' ')}>{scale}</td>\n            );\n\nfunction thGroupClick(i, groupName) {\n    //alert(i + 'aab:' + groupName);\n    document.querySelectorAll('.tdDayCol' + i).forEach(function (el) {\n        el.classList.toggle('backSelected');\n    });\n    eventClick(\"Grupo \"+groupName);\n    \n} \n\nconst groupsTD = (groups) => \n    groups.map((groupName, i) =>\n        <th key={i} onClick={() => { thGroupClick(i, groupName); }}>{groupName}</th>\n    );\n\nconst daysTR = (daysIn) => daysIn.map((day, i) =>\n    <tr key={i} className={[styleClassWeekDay(day.day), 'trTable'].join(' ')}>\n    <td key={i} className={['tdDate', styleClassToday(day.day)].join(' ')} > {DateToStringFormated(day.day)}</td> \n        {weekDayTD(day.day)} \n        {dayTDfunc(day)} \n    </tr>\n);\n\n/* <th>{objMonthScales[0].day.toLocaleDateString(\"pt\")}</th> */\nconst monthTRHeader = (objMonthScales) =>\n    (   \n        <tr className={'trHead'}>\n            {yearTD(objMonthScales[0].day)}\n            <th>&nbsp;</th> \n            {groupsTD(objMonthScales[0].groups)} \n        </tr> \n        \n    );\nconst monthTRsComplete = (daysIn) => ([monthTRHeader(daysIn), daysTR(daysIn)]);\nconst tBodyTable = (monthsTRsIn) =>  (<tbody>{monthsTRsIn}</tbody>)\n\n\nfunction getDistFromBottom () {\n  \n    var scrollPosition = window.pageYOffset;\n    var windowSize     = window.innerHeight;\n    var bodyHeight     = document.body.offsetHeight;\n    return Math.max(bodyHeight - (scrollPosition + windowSize), 0);  \n  }\n\n\nclass Tabela2 extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const { tableName } = this.props;\n        this.setState({tableEra: tableName});\n        this.initTableComponent();\n\n    }\n\n    initTableComponent() {\n        const tableName = this.props.tableName;\n        \n        tabelaGear.populateTableDate(tableName);\n        const dateIn = new Date(); // GetToday\n        const days = tabelaGear.getMonthScales(dateIn);\n\n        let beforeFirstMonthDay = new Date(dateIn.getFullYear(), dateIn.getMonth()-1, 1);\n        let daysbefore = tabelaGear.getMonthScales(beforeFirstMonthDay);\n\n        this.state = { \n            tableInput: tableName,\n            dayOne: dateIn,\n            actualDay: dateIn,\n            monthsTRs: [monthTRsComplete(daysbefore), monthTRsComplete(days)],\n        }\n    }\n\n    tick()   {\n        const dateIn = this.state.actualDay;\n        let nextFirstMonthDay = new Date(dateIn.getFullYear(), dateIn.getMonth()+1, 1);\n        let nextMonthScale = tabelaGear.getMonthScales(nextFirstMonthDay);\n\n        this.setState({\n            monthsTRs: [\n                ...this.state.monthsTRs,\n                monthTRsComplete(nextMonthScale)\n             ],\n             actualDay: nextFirstMonthDay\n         });\n        \n        // Track month loading\n        let trackAction = dateIn.getFullYear()+\"-\"+(dateIn.getMonth()+1);\n        console.log(trackAction);\n        trackEvent('Navigation', trackAction, 'label3');   \n     }\n\n     handleScroll() {\n        let distToBottom = getDistFromBottom();\n        if (distToBottom > 0 && distToBottom <= 1400) { // Near end;\n            let extTick = this.tick.bind(this);\n            extTick();\n        }\n     }\n\n    componentDidMount() {\n\n        //console.log(this.props.groupSelected);\n        \n        let txtGroupSeleced = this.props.groupSelected;\n        if (txtGroupSeleced != undefined) {\n            var xpath = \"//th[text()='\" + txtGroupSeleced + \"']\";\n            var matchingElement = document.evaluate(xpath, document, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null).singleNodeValue;\n            matchingElement.click();\n            console.log(\"Mathing\");\n            console.log(matchingElement);\n        }\n        \n        document.addEventListener('scroll', this.handleScroll.bind(this));\n    \n        let timer = setTimeout(function () { // Wait 50ms and set scrool to TODAY\n            window.scrollTo(0, document.getElementsByClassName(\"tdToday\")[0].offsetTop - 135); //era 88 \n        }, 50);\n        \n        let extTick = this.tick.bind(this); // To use method in next line\n        extTick(); // Load next month as DidMount.\n    }\n\n    \n    componentDidUpdate(prevProps) {\n        if (this.props.tableName !== prevProps.tableName) {\n          this.initTableComponent();\n          let extTick = this.tick.bind(this);\n          extTick();\n        }\n      }\n\n    render() {  \n\n        return ( \n            /* <div className=\"tbContainer\">*/\n            <table className={'tbMain'}>\n                {tBodyTable(this.state.monthsTRs)}\n            </table>\n            /*</div>*/\n        )\n    }\n}\n\n\nTabela2.propTypes = {\n    //classes: PropTypes.object.isRequired,\n};\n\n\nexport default Tabela2;"]},"metadata":{},"sourceType":"module"}