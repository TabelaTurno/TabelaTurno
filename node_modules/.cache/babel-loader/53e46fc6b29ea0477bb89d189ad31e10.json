{"ast":null,"code":"var _MS_PER_DAY = 1000 * 60 * 60 * 24; // a and b are javascript Date objects\n\n\nfunction dateDiffInDays(a, b) {\n  // Discard the time and time-zone information.\n  var utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n  var utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n  return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n}\n\nfunction getDaysInMonth(month, year) {\n  var date = new Date(year, month, 1);\n  var days = [];\n\n  while (date.getMonth() === month) {\n    days.push(new Date(date));\n    date.setDate(date.getDate() + 1);\n  }\n\n  return days;\n}\n\nvar tableOpts = [];\ntableOpts[\"Teste4\"] = \" A B C D\\n  8 8 8 F\\n  8 8 F 8\\n  8 F 8 8\\n  F 8 8 8\\n  8 8 8 8\";\ntableOpts[\"Refap\"] = \" G1 G2 G3 G4 G5\\n  23 7 F 15 F\\n  23 7 F 15 F\\n  23 F 7 15 F\\n  23 15 7 F F\\n  F 15 7 F 23\\n  F 15 7 F 23\\n  7 15 F F 23\\n  7 F 15 23 F\\n  7 F 15 23 F\\n  F F 15 23 7\\n  15 F F 23 7\\n  15 23 F F 7\\n  15 23 F F 7\\n  15 23 F 7 F\\n  F F 23 7 15\\n  F F 23 7 15\\n  F 7 23 F 15\\n  F 7 23 15 F\\n  23 7 F 15 F\\n  23 7 F 15 F\\n  23 F 7 15 F\\n  F 15 7 F 23\\n  F 15 7 F 23\\n  7 15 F F 23\\n  7 F 15 F 23\\n  7 F 15 23 F\\n  7 F 15 23 F\\n  F F 15 23 7\\n  15 23 F F 7\\n  15 23 F F 7\\n  15 23 F 7 F\\n  F 23 F 7 15\\n  F F 23 7 15\\n  F F 23 7 15\\n  F 7 23 F 15\";\ntableOpts[\"Refap0\"] = \" G1 G2 G3 G4 G5\\n    F 8 0 16 F\\n    0 8 F 16 F\\n    0 F 8 16 F\\n    0 16 8 F F\\n    0 16 8 F F\\n    F 16 8 F 0\\n    8 16 F F 0\\n    8 F 16 F 0\\n    8 F 16 0 F\\n    F F 16 0 8\\n    16 F F 0 8\\n    16 F F 0 8\\n    16 0 F F 8\\n    16 0 F 8 F\\n    F 0 F 8 16\\n    F F 0 8 16\\n    F 8 0 F 16\\n    F 8 0 16 F\\n    F 8 0 16 F\\n    0 8 F 16 F\\n    0 F 8 16 F\\n    0 16 8 F F\\n    F 16 8 F 0\\n    8 16 F F 0\\n    8 F 16 F 0\\n    8 F 16 F 0\\n    8 F 16 0 F\\n    F F 16 0 8\\n    16 F F 0 8\\n    16 0 F F 8\\n    16 0 F 8 F\\n    F 0 F 8 16\\n    F 0 F 8 16\\n    F F 0 8 16\\n    F 8 0 F 16\";\ntableOpts[\"Reduc\"] = \"I II III IV V\\n    15 7 F F 23\\n    15 F 7 F 23\\n    15 23 7 F F\\n    F 23 7 15 F\\n    7 F 23 15 F\\n    7 F 23 15 F\\n    7 F 23 15 F\\n    7 F F 23 15\\n    F 7 F 23 15\\n    23 7 F F 15\\n    23 7 15 F F\\n    F 23 15 F 7\\n    F 23 15 F 7\\n    F 23 15 F 7\\n    F F 23 15 7\\n    7 F 23 15 F\\n    7 F F 15 23\\n    7 15 F F 23\\n    23 15 F 7 F\\n    23 15 F 7 F\\n    23 15 F 7 F\\n    F 23 15 7 F\\n    F 23 15 F 7\\n    F F 15 23 7\\n    15 F F 23 7\\n    15 F 7 F 23\\n    15 F 7 F 23\\n    15 F 7 F 23\\n    23 15 7 F F\\n    23 15 F 7 F\\n    F 15 23 7 F\\n    F F 23 7 15\\n    F 7 F 23 15\\n    F 7 F 23 15\\n    F 7 F 23 15\";\nvar structTabela = {\n  tableName: \"Refap\",\n  tableLink: \"refap23\",\n  firstDay: \"2018-08-01\",\n  firstDayJS: \"\",\n  groups: \"\",\n  daysLines: \"\",\n  //tableData: tabelaRefap23,\n  populateTableDate: function populateTableDate(tabelaName) {\n    if (!tabelaName) {\n      tabelaName = \"Refap23\";\n    }\n\n    this.tableData = tableOpts[tabelaName]; // TODO: automatic load..\n\n    var newvar = this.tableData.replace(/^\\s+/g, '').split(\"\\n\");\n    var newvar2 = newvar.map(function (k, v) {\n      return k.replace(/^\\s+/g, '').split(\" \");\n    });\n    this.groups = newvar2[0];\n    newvar2.splice(0, 1); // remove index 0 - groups\n\n    this.daysLines = newvar2;\n    var newDate = this.firstDay.split(\"-\");\n    this.firstDayJS = new Date(newDate[0], newDate[1] - 1, newDate[2]);\n    return console.log(this.firstDayJS);\n  },\n  getDayScales: function getDayScales(dateIn) {\n    var ret = {\n      day: \"\",\n      groups: \"\",\n      schedule: \"\"\n    };\n    var tableSize = this.daysLines.length;\n    var diffDays = dateDiffInDays(this.firstDayJS, dateIn); //console.log(diffDays);\n\n    var relDiffSize = diffDays / tableSize;\n    var round1 = Math.floor(relDiffSize);\n    var step1 = (relDiffSize - round1).toFixed(6);\n    var step2 = step1 * tableSize;\n    var index1 = Math.round(step2);\n    ret.day = dateIn;\n    ret.groups = this.groups;\n    ret.schedule = this.daysLines[index1]; //console.log(diffDays + \"--\" + dateIn);\n\n    return ret;\n  },\n  getMonthScales: function getMonthScales(dateIn) {\n    var ret = [];\n    var month = dateIn.getMonth();\n    var year = dateIn.getFullYear();\n    var lastDayofMonth = new Date(year, month + 1, 0).getDate();\n\n    for (var day = 1; day <= lastDayofMonth; day++) {\n      var dateDay = new Date(year, month, day, 8, 0, 0); // 8:00 AM for BUG of daylight saving (DST)\n\n      var dia = this.getDayScales(dateDay);\n      ret.push(dia);\n    }\n\n    return ret;\n  }\n};\nexport default structTabela;","map":{"version":3,"sources":["/Users/angelomaraujo/gits/TabelaTurno_WORKDIR/TabelaTurno/src/tableGear.js"],"names":["_MS_PER_DAY","dateDiffInDays","a","b","utc1","Date","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","getDaysInMonth","month","year","date","days","push","setDate","tableOpts","structTabela","tableName","tableLink","firstDay","firstDayJS","groups","daysLines","populateTableDate","tabelaName","tableData","newvar","replace","split","newvar2","map","k","v","splice","newDate","console","log","getDayScales","dateIn","ret","day","schedule","tableSize","length","diffDays","relDiffSize","round1","step1","toFixed","step2","index1","round","getMonthScales","lastDayofMonth","dateDay","dia"],"mappings":"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","sourcesContent":["    \n    const _MS_PER_DAY = 1000 * 60 * 60 * 24;\n    // a and b are javascript Date objects\n    function dateDiffInDays(a, b) {\n        // Discard the time and time-zone information.\n        const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n        const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n        return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n    }   \n\n    function getDaysInMonth(month, year) {\n     var date = new Date(year, month, 1);\n     var days = [];\n     while (date.getMonth() === month) {\n        days.push(new Date(date));\n        date.setDate(date.getDate() + 1);\n     }\n        return days;\n    }\n    let tableOpts = [];\n    tableOpts[\"Teste4\"] = \n` A B C D\n  8 8 8 F\n  8 8 F 8\n  8 F 8 8\n  F 8 8 8\n  8 8 8 8`;\n\n    tableOpts[\"Refap\"] = \n` G1 G2 G3 G4 G5\n  23 7 F 15 F\n  23 7 F 15 F\n  23 F 7 15 F\n  23 15 7 F F\n  F 15 7 F 23\n  F 15 7 F 23\n  7 15 F F 23\n  7 F 15 23 F\n  7 F 15 23 F\n  F F 15 23 7\n  15 F F 23 7\n  15 23 F F 7\n  15 23 F F 7\n  15 23 F 7 F\n  F F 23 7 15\n  F F 23 7 15\n  F 7 23 F 15\n  F 7 23 15 F\n  23 7 F 15 F\n  23 7 F 15 F\n  23 F 7 15 F\n  F 15 7 F 23\n  F 15 7 F 23\n  7 15 F F 23\n  7 F 15 F 23\n  7 F 15 23 F\n  7 F 15 23 F\n  F F 15 23 7\n  15 23 F F 7\n  15 23 F F 7\n  15 23 F 7 F\n  F 23 F 7 15\n  F F 23 7 15\n  F F 23 7 15\n  F 7 23 F 15`;\n\n\n  tableOpts[\"Refap0\"] = \n  ` G1 G2 G3 G4 G5\n    F 8 0 16 F\n    0 8 F 16 F\n    0 F 8 16 F\n    0 16 8 F F\n    0 16 8 F F\n    F 16 8 F 0\n    8 16 F F 0\n    8 F 16 F 0\n    8 F 16 0 F\n    F F 16 0 8\n    16 F F 0 8\n    16 F F 0 8\n    16 0 F F 8\n    16 0 F 8 F\n    F 0 F 8 16\n    F F 0 8 16\n    F 8 0 F 16\n    F 8 0 16 F\n    F 8 0 16 F\n    0 8 F 16 F\n    0 F 8 16 F\n    0 16 8 F F\n    F 16 8 F 0\n    8 16 F F 0\n    8 F 16 F 0\n    8 F 16 F 0\n    8 F 16 0 F\n    F F 16 0 8\n    16 F F 0 8\n    16 0 F F 8\n    16 0 F 8 F\n    F 0 F 8 16\n    F 0 F 8 16\n    F F 0 8 16\n    F 8 0 F 16`;\n  \n  tableOpts[\"Reduc\"] = \n  `I II III IV V\n    15 7 F F 23\n    15 F 7 F 23\n    15 23 7 F F\n    F 23 7 15 F\n    7 F 23 15 F\n    7 F 23 15 F\n    7 F 23 15 F\n    7 F F 23 15\n    F 7 F 23 15\n    23 7 F F 15\n    23 7 15 F F\n    F 23 15 F 7\n    F 23 15 F 7\n    F 23 15 F 7\n    F F 23 15 7\n    7 F 23 15 F\n    7 F F 15 23\n    7 15 F F 23\n    23 15 F 7 F\n    23 15 F 7 F\n    23 15 F 7 F\n    F 23 15 7 F\n    F 23 15 F 7\n    F F 15 23 7\n    15 F F 23 7\n    15 F 7 F 23\n    15 F 7 F 23\n    15 F 7 F 23\n    23 15 7 F F\n    23 15 F 7 F\n    F 15 23 7 F\n    F F 23 7 15\n    F 7 F 23 15\n    F 7 F 23 15\n    F 7 F 23 15`;\n\nvar structTabela = {\n    tableName: \"Refap\", \n    tableLink: \"refap23\", \n    firstDay: \"2018-08-01\", \n    firstDayJS: \"\",\n    groups: \"\",\n    daysLines: \"\",\n    //tableData: tabelaRefap23,\n\n    populateTableDate: function(tabelaName) {\n        if (!tabelaName) { tabelaName = \"Refap23\"; }\n        this.tableData = tableOpts[tabelaName]; // TODO: automatic load..\n        let newvar = this.tableData.replace(/^\\s+/g,'').split(\"\\n\");\n        let newvar2 = newvar.map(function(k,v) { return k.replace(/^\\s+/g,'').split(\" \"); })\n        this.groups = newvar2[0];\n        newvar2.splice(0,1); // remove index 0 - groups\n        this.daysLines = newvar2;\n        let newDate = this.firstDay.split(\"-\");\n        this.firstDayJS = new Date(newDate[0], newDate[1]-1, newDate[2]);\n        return console.log(this.firstDayJS);\n    },\n    getDayScales: function(dateIn) {\n        let ret = {day: \"\", groups: \"\", schedule: \"\"};\n        let tableSize = this.daysLines.length;\n        let diffDays = dateDiffInDays(this.firstDayJS, dateIn);\n        //console.log(diffDays);\n        let relDiffSize = diffDays / tableSize;\n        let round1 = Math.floor(relDiffSize);\n        let step1 = (relDiffSize-round1).toFixed(6);\n        let step2 = step1 * tableSize;\n        let index1 = Math.round(step2);\n        \n        ret.day = dateIn;\n        ret.groups = this.groups;\n        ret.schedule = this.daysLines[index1];\n        //console.log(diffDays + \"--\" + dateIn);\n        return ret;\n    },\n    getMonthScales: function(dateIn) {\n        let ret = [];\n        let month = dateIn.getMonth();\n        let year = dateIn.getFullYear();\n        let lastDayofMonth = (new Date(year,month+1,0)).getDate();\n        for (let day=1; day <= lastDayofMonth; day++) {\n            let dateDay = new Date(year, month, day, 8,0,0); // 8:00 AM for BUG of daylight saving (DST)\n            let dia = this.getDayScales(dateDay);\n            ret.push(dia);\n        }\n\n        return ret;\n    }\n}\n\nexport default structTabela;"]},"metadata":{},"sourceType":"module"}