{"ast":null,"code":"var _jsxFileName = \"/Users/angelomaraujo/gits/TabelaTurno_WORKDIR/TabelaTurno/src/Theme.js\";\nimport React from \"react\"; //const handleClickTheme = () =>  { alert('a'); }\n\nclass BtnChangeTheme extends React.Component {\n  constructor(props) {\n    super(props);\n    let storageTheme = window.localStorage.getItem('AppTheme');\n    let localTheme = storageTheme == null ? \"\" : storageTheme;\n    this.state = {\n      AppTheme: localTheme\n    };\n  }\n\n  handleTheme() {\n    if (this.state.AppTheme === \"\") {\n      this.setState({\n        AppTheme: \"themeBlack\"\n      }, function () {\n        document.body.classList.add(\"themeBlack\");\n        window.localStorage.setItem('AppTheme', 'themeBlack');\n      });\n    } else {\n      this.setState({\n        AppTheme: \"\"\n      }, function () {\n        document.body.classList.remove(\"themeBlack\");\n        window.localStorage.setItem('AppTheme', '');\n      });\n    }\n  }\n\n  handleClickTheme() {\n    let fnHandleTheme = this.handleTheme.bind(this);\n    fnHandleTheme(); //this.VerifyAppTheme(this.state.AppTheme);\n  }\n\n  render() {\n    const themeWhite = this.state.AppTheme === \"\";\n    const txtThemeToChange = themeWhite ? \"escuro\" : \"claro\"; //this.VerifyAppTheme(themeWhite);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.className,\n      onClick: this.handleClickTheme.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, \"Tema \", txtThemeToChange);\n  }\n\n}\n\nexport default BtnChangeTheme;","map":{"version":3,"sources":["/Users/angelomaraujo/gits/TabelaTurno_WORKDIR/TabelaTurno/src/Theme.js"],"names":["React","BtnChangeTheme","Component","constructor","props","storageTheme","window","localStorage","getItem","localTheme","state","AppTheme","handleTheme","setState","document","body","classList","add","setItem","remove","handleClickTheme","fnHandleTheme","bind","render","themeWhite","txtThemeToChange","className"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AAEA,MAAMC,cAAN,SAA6BD,KAAK,CAACE,SAAnC,CAA6C;AAC3CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,QAAIC,YAAY,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAnB;AACA,QAAIC,UAAU,GAAIJ,YAAY,IAAE,IAAf,GAAuB,EAAvB,GAA4BA,YAA7C;AAEA,SAAKK,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAEF;AADC,KAAb;AAKD;;AAEDG,EAAAA,WAAW,GAAG;AACZ,QAAI,KAAKF,KAAL,CAAWC,QAAX,KAAwB,EAA5B,EAAgC;AAC9B,WAAKE,QAAL,CACE;AACEF,QAAAA,QAAQ,EAAE;AADZ,OADF,EAIE,YAAW;AACTG,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,YAA5B;AACAX,QAAAA,MAAM,CAACC,YAAP,CAAoBW,OAApB,CAA4B,UAA5B,EAAwC,YAAxC;AACD,OAPH;AASD,KAVD,MAUO;AACL,WAAKL,QAAL,CACE;AACEF,QAAAA,QAAQ,EAAE;AADZ,OADF,EAIE,YAAW;AACTG,QAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBG,MAAxB,CAA+B,YAA/B;AACAb,QAAAA,MAAM,CAACC,YAAP,CAAoBW,OAApB,CAA4B,UAA5B,EAAwC,EAAxC;AACD,OAPH;AASD;AACF;;AAEDE,EAAAA,gBAAgB,GAAG;AACjB,QAAIC,aAAa,GAAG,KAAKT,WAAL,CAAiBU,IAAjB,CAAsB,IAAtB,CAApB;AACAD,IAAAA,aAAa,GAFI,CAGjB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,KAAKd,KAAL,CAAWC,QAAX,KAAwB,EAA3C;AACA,UAAMc,gBAAgB,GAAGD,UAAU,GAAG,QAAH,GAAc,OAAjD,CAFO,CAGP;;AAEA,wBACE;AACE,MAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWsB,SADxB;AAEE,MAAA,OAAO,EAAE,KAAKN,gBAAL,CAAsBE,IAAtB,CAA2B,IAA3B,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAIQG,gBAJR,CADF;AAQD;;AAzD0C;;AA4D7C,eAAexB,cAAf","sourcesContent":["import React from \"react\";\n\n//const handleClickTheme = () =>  { alert('a'); }\n\nclass BtnChangeTheme extends React.Component {\n  constructor(props) {\n    super(props);\n\n    let storageTheme = window.localStorage.getItem('AppTheme');\n    let localTheme = (storageTheme==null) ? \"\" : storageTheme;\n\n    this.state = {\n      AppTheme: localTheme\n    };\n    \n\n  }\n\n  handleTheme() {\n    if (this.state.AppTheme === \"\") {\n      this.setState(\n        {\n          AppTheme: \"themeBlack\"\n        },\n        function() {\n          document.body.classList.add(\"themeBlack\");\n          window.localStorage.setItem('AppTheme', 'themeBlack');\n        }\n      );\n    } else {\n      this.setState(\n        {\n          AppTheme: \"\"\n        },\n        function() {\n          document.body.classList.remove(\"themeBlack\");\n          window.localStorage.setItem('AppTheme', '');\n        }\n      );\n    }\n  }\n\n  handleClickTheme() {\n    let fnHandleTheme = this.handleTheme.bind(this);\n    fnHandleTheme();\n    //this.VerifyAppTheme(this.state.AppTheme);\n  }\n\n  render() {\n    const themeWhite = this.state.AppTheme === \"\";\n    const txtThemeToChange = themeWhite ? \"escuro\" : \"claro\";\n    //this.VerifyAppTheme(themeWhite);\n\n    return (\n      <div\n        className={this.props.className}\n        onClick={this.handleClickTheme.bind(this)}\n      >\n        Tema {txtThemeToChange}\n      </div>\n    );\n  }\n}\n\nexport default BtnChangeTheme;\n"]},"metadata":{},"sourceType":"module"}