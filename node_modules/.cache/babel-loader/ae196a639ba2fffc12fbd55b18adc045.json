{"ast":null,"code":"const _MS_PER_DAY=1000*60*60*24;// a and b are javascript Date objects\nfunction dateDiffInDays(a,b){// Discard the time and time-zone information.\nconst utc1=Date.UTC(a.getFullYear(),a.getMonth(),a.getDate());const utc2=Date.UTC(b.getFullYear(),b.getMonth(),b.getDate());return Math.floor((utc2-utc1)/_MS_PER_DAY);}function getDaysInMonth(month,year){var date=new Date(year,month,1);var days=[];while(date.getMonth()===month){days.push(new Date(date));date.setDate(date.getDate()+1);}return days;}let tableOpts=[];tableOpts[\"Teste4\"]=\" A B C D\\n  8 8 8 F\\n  8 8 F 8\\n  8 F 8 8\\n  F 8 8 8\\n  8 8 8 8\";tableOpts[\"Refap\"]=\" G1 G2 G3 G4 G5\\n  23 7 F 15 F\\n  23 7 F 15 F\\n  23 F 7 15 F\\n  23 15 7 F F\\n  F 15 7 F 23\\n  F 15 7 F 23\\n  7 15 F F 23\\n  7 F 15 23 F\\n  7 F 15 23 F\\n  F F 15 23 7\\n  15 F F 23 7\\n  15 23 F F 7\\n  15 23 F F 7\\n  15 23 F 7 F\\n  F F 23 7 15\\n  F F 23 7 15\\n  F 7 23 F 15\\n  F 7 23 15 F\\n  23 7 F 15 F\\n  23 7 F 15 F\\n  23 F 7 15 F\\n  F 15 7 F 23\\n  F 15 7 F 23\\n  7 15 F F 23\\n  7 F 15 F 23\\n  7 F 15 23 F\\n  7 F 15 23 F\\n  F F 15 23 7\\n  15 23 F F 7\\n  15 23 F F 7\\n  15 23 F 7 F\\n  F 23 F 7 15\\n  F F 23 7 15\\n  F F 23 7 15\\n  F 7 23 F 15\";tableOpts[\"Refap0\"]=\" G1 G2 G3 G4 G5\\n    F 8 0 16 F\\n    0 8 F 16 F\\n    0 F 8 16 F\\n    0 16 8 F F\\n    0 16 8 F F\\n    F 16 8 F 0\\n    8 16 F F 0\\n    8 F 16 F 0\\n    8 F 16 0 F\\n    F F 16 0 8\\n    16 F F 0 8\\n    16 F F 0 8\\n    16 0 F F 8\\n    16 0 F 8 F\\n    F 0 F 8 16\\n    F F 0 8 16\\n    F 8 0 F 16\\n    F 8 0 16 F\\n    F 8 0 16 F\\n    0 8 F 16 F\\n    0 F 8 16 F\\n    0 16 8 F F\\n    F 16 8 F 0\\n    8 16 F F 0\\n    8 F 16 F 0\\n    8 F 16 F 0\\n    8 F 16 0 F\\n    F F 16 0 8\\n    16 F F 0 8\\n    16 0 F F 8\\n    16 0 F 8 F\\n    F 0 F 8 16\\n    F 0 F 8 16\\n    F F 0 8 16\\n    F 8 0 F 16\";tableOpts[\"Reduc\"]=\"I II III IV V\\n    15 7 F F 23\\n    15 F 7 F 23\\n    15 23 7 F F\\n    F 23 7 15 F\\n    7 F 23 15 F\\n    7 F 23 15 F\\n    7 F 23 15 F\\n    7 F F 23 15\\n    F 7 F 23 15\\n    23 7 F F 15\\n    23 7 15 F F\\n    F 23 15 F 7\\n    F 23 15 F 7\\n    F 23 15 F 7\\n    F F 23 15 7\\n    7 F 23 15 F\\n    7 F F 15 23\\n    7 15 F F 23\\n    23 15 F 7 F\\n    23 15 F 7 F\\n    23 15 F 7 F\\n    F 23 15 7 F\\n    F 23 15 F 7\\n    F F 15 23 7\\n    15 F F 23 7\\n    15 F 7 F 23\\n    15 F 7 F 23\\n    15 F 7 F 23\\n    23 15 7 F F\\n    23 15 F 7 F\\n    F 15 23 7 F\\n    F F 23 7 15\\n    F 7 F 23 15\\n    F 7 F 23 15\\n    F 7 F 23 15\";tableOpts[\"Refap12x12\"]=\" G1 G2 G3 G4 G5\\n    F F 7 19 F\\n    F F F 19 7\\n    19 F F F 7\\n    19 F F F 7\\n    19 7 F F F\\n    F 7 19 F F\\n    F 7 19 F F\\n    F F 19 7 F\\n    F F F 7 19\\n    F F F 7 19\\n    7 F F F 19\\n    7 19 F F F\\n    7 19 F F F\\n    F 19 7 F F\\n    F F 7 19 F\";tableOpts[\"Repar12x12\"]=\" A B C D E\\n    F 7 19 F F\\n    F 7 19 F F\\n    F F 19 7 F\\n    F F F 7 19\\n    F F F 7 19\\n    7 F F F 19\\n    7 19 F F F\\n    7 19 F F F\\n    F 19 7 F F\\n    F F 7 19 F\\n    F F 7 19 F\\n    F F F 19 7\\n    19 F F F 7\\n    19 F F F 7\\n    19 7 F F F\";tableOpts[\"Replan12x12\"]=tableOpts[\"Repar12x12\"];tableOpts[\"Rpbc12x12\"]=\" A B C D E\\n    F F 19 7 F\\n    F F F 7 19\\n    F F F 7 19\\n    7 F F F 19\\n    7 19 F F F\\n    7 19 F F F\\n    F 19 7 F F\\n    F F 7 19 F\\n    F F 7 19 F\\n    F F F 19 7\\n    19 F F F 7\\n    19 F F F 7\\n    19 7 F F F\\n    F 7 19 F F\\n    F 7 19 F F\";tableOpts[\"Reduc12x12\"]=\" A B C D E\\n    F 7 F F 19\\n    19 7 F F F\\n    19 7 F F F\\n    19 F F 7 F\\n    F F 19 7 F\\n    F F 19 7 F\\n    F F 19 F 7\\n    F 19 F F 7\\n    F 19 F F 7\\n    7 19 F F F\\n    7 F F 19 F\\n    7 F F 19 F\\n    F F 7 19 F\\n    F F 7 F 19\\n    F F 7 F 19\";var structTabela={tableName:\"Refap\",tableLink:\"refap23\",firstDay:\"2018-08-01\",firstDayJS:\"\",groups:\"\",daysLines:\"\",//tableData: tabelaRefap23,\npopulateTableDate:function populateTableDate(tabelaName){if(!tabelaName){tabelaName=\"Refap12x12\";}this.tableData=tableOpts[tabelaName];// TODO: automatic load..\nlet newvar=this.tableData.replace(/^\\s+/g,'').split(\"\\n\");let newvar2=newvar.map(function(k,v){return k.replace(/^\\s+/g,'').split(\" \");});this.groups=newvar2[0];newvar2.splice(0,1);// remove index 0 - groups\nthis.daysLines=newvar2;let newDate=this.firstDay.split(\"-\");this.firstDayJS=new Date(newDate[0],newDate[1]-1,newDate[2]);return console.log(this.firstDayJS);},getDayScales:function getDayScales(dateIn){let ret={day:\"\",groups:\"\",schedule:\"\"};let tableSize=this.daysLines.length;let diffDays=dateDiffInDays(this.firstDayJS,dateIn);//console.log(diffDays);\nlet relDiffSize=diffDays/tableSize;let round1=Math.floor(relDiffSize);let step1=(relDiffSize-round1).toFixed(6);let step2=step1*tableSize;let index1=Math.round(step2);ret.day=dateIn;ret.groups=this.groups;ret.schedule=this.daysLines[index1];//console.log(diffDays + \"--\" + dateIn);\nreturn ret;},getMonthScales:function getMonthScales(dateIn){let ret=[];let month=dateIn.getMonth();let year=dateIn.getFullYear();let lastDayofMonth=new Date(year,month+1,0).getDate();for(let day=1;day<=lastDayofMonth;day++){let dateDay=new Date(year,month,day,8,0,0);// 8:00 AM for BUG of daylight saving (DST)\nlet dia=this.getDayScales(dateDay);ret.push(dia);}return ret;}};export default structTabela;","map":{"version":3,"sources":["/Users/angelomaraujo/gits/TabelaTurno_WORKDIR/TabelaTurno/src/tableGear.js"],"names":["_MS_PER_DAY","dateDiffInDays","a","b","utc1","Date","UTC","getFullYear","getMonth","getDate","utc2","Math","floor","getDaysInMonth","month","year","date","days","push","setDate","tableOpts","structTabela","tableName","tableLink","firstDay","firstDayJS","groups","daysLines","populateTableDate","tabelaName","tableData","newvar","replace","split","newvar2","map","k","v","splice","newDate","console","log","getDayScales","dateIn","ret","day","schedule","tableSize","length","diffDays","relDiffSize","round1","step1","toFixed","step2","index1","round","getMonthScales","lastDayofMonth","dateDay","dia"],"mappings":"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","sourcesContent":["    \n    const _MS_PER_DAY = 1000 * 60 * 60 * 24;\n    // a and b are javascript Date objects\n    function dateDiffInDays(a, b) {\n        // Discard the time and time-zone information.\n        const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n        const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n        return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n    }   \n\n    function getDaysInMonth(month, year) {\n     var date = new Date(year, month, 1);\n     var days = [];\n     while (date.getMonth() === month) {\n        days.push(new Date(date));\n        date.setDate(date.getDate() + 1);\n     }\n        return days;\n    }\n    let tableOpts = [];\n    tableOpts[\"Teste4\"] = \n` A B C D\n  8 8 8 F\n  8 8 F 8\n  8 F 8 8\n  F 8 8 8\n  8 8 8 8`;\n\n    tableOpts[\"Refap\"] = \n` G1 G2 G3 G4 G5\n  23 7 F 15 F\n  23 7 F 15 F\n  23 F 7 15 F\n  23 15 7 F F\n  F 15 7 F 23\n  F 15 7 F 23\n  7 15 F F 23\n  7 F 15 23 F\n  7 F 15 23 F\n  F F 15 23 7\n  15 F F 23 7\n  15 23 F F 7\n  15 23 F F 7\n  15 23 F 7 F\n  F F 23 7 15\n  F F 23 7 15\n  F 7 23 F 15\n  F 7 23 15 F\n  23 7 F 15 F\n  23 7 F 15 F\n  23 F 7 15 F\n  F 15 7 F 23\n  F 15 7 F 23\n  7 15 F F 23\n  7 F 15 F 23\n  7 F 15 23 F\n  7 F 15 23 F\n  F F 15 23 7\n  15 23 F F 7\n  15 23 F F 7\n  15 23 F 7 F\n  F 23 F 7 15\n  F F 23 7 15\n  F F 23 7 15\n  F 7 23 F 15`;\n\n\n  tableOpts[\"Refap0\"] = \n  ` G1 G2 G3 G4 G5\n    F 8 0 16 F\n    0 8 F 16 F\n    0 F 8 16 F\n    0 16 8 F F\n    0 16 8 F F\n    F 16 8 F 0\n    8 16 F F 0\n    8 F 16 F 0\n    8 F 16 0 F\n    F F 16 0 8\n    16 F F 0 8\n    16 F F 0 8\n    16 0 F F 8\n    16 0 F 8 F\n    F 0 F 8 16\n    F F 0 8 16\n    F 8 0 F 16\n    F 8 0 16 F\n    F 8 0 16 F\n    0 8 F 16 F\n    0 F 8 16 F\n    0 16 8 F F\n    F 16 8 F 0\n    8 16 F F 0\n    8 F 16 F 0\n    8 F 16 F 0\n    8 F 16 0 F\n    F F 16 0 8\n    16 F F 0 8\n    16 0 F F 8\n    16 0 F 8 F\n    F 0 F 8 16\n    F 0 F 8 16\n    F F 0 8 16\n    F 8 0 F 16`;\n  \n  tableOpts[\"Reduc\"] = \n  `I II III IV V\n    15 7 F F 23\n    15 F 7 F 23\n    15 23 7 F F\n    F 23 7 15 F\n    7 F 23 15 F\n    7 F 23 15 F\n    7 F 23 15 F\n    7 F F 23 15\n    F 7 F 23 15\n    23 7 F F 15\n    23 7 15 F F\n    F 23 15 F 7\n    F 23 15 F 7\n    F 23 15 F 7\n    F F 23 15 7\n    7 F 23 15 F\n    7 F F 15 23\n    7 15 F F 23\n    23 15 F 7 F\n    23 15 F 7 F\n    23 15 F 7 F\n    F 23 15 7 F\n    F 23 15 F 7\n    F F 15 23 7\n    15 F F 23 7\n    15 F 7 F 23\n    15 F 7 F 23\n    15 F 7 F 23\n    23 15 7 F F\n    23 15 F 7 F\n    F 15 23 7 F\n    F F 23 7 15\n    F 7 F 23 15\n    F 7 F 23 15\n    F 7 F 23 15`;\n\n    tableOpts[\"Refap12x12\"] = \n    ` G1 G2 G3 G4 G5\n    F F 7 19 F\n    F F F 19 7\n    19 F F F 7\n    19 F F F 7\n    19 7 F F F\n    F 7 19 F F\n    F 7 19 F F\n    F F 19 7 F\n    F F F 7 19\n    F F F 7 19\n    7 F F F 19\n    7 19 F F F\n    7 19 F F F\n    F 19 7 F F\n    F F 7 19 F`;\n\n    tableOpts[\"Repar12x12\"] = \n    ` A B C D E\n    F 7 19 F F\n    F 7 19 F F\n    F F 19 7 F\n    F F F 7 19\n    F F F 7 19\n    7 F F F 19\n    7 19 F F F\n    7 19 F F F\n    F 19 7 F F\n    F F 7 19 F\n    F F 7 19 F\n    F F F 19 7\n    19 F F F 7\n    19 F F F 7\n    19 7 F F F`;\n\n    tableOpts[\"Replan12x12\"] = tableOpts[\"Repar12x12\"];\n\n    tableOpts[\"Rpbc12x12\"] = \n    ` A B C D E\n    F F 19 7 F\n    F F F 7 19\n    F F F 7 19\n    7 F F F 19\n    7 19 F F F\n    7 19 F F F\n    F 19 7 F F\n    F F 7 19 F\n    F F 7 19 F\n    F F F 19 7\n    19 F F F 7\n    19 F F F 7\n    19 7 F F F\n    F 7 19 F F\n    F 7 19 F F`;\n\ntableOpts[\"Reduc12x12\"] =\n    ` A B C D E\n    F 7 F F 19\n    19 7 F F F\n    19 7 F F F\n    19 F F 7 F\n    F F 19 7 F\n    F F 19 7 F\n    F F 19 F 7\n    F 19 F F 7\n    F 19 F F 7\n    7 19 F F F\n    7 F F 19 F\n    7 F F 19 F\n    F F 7 19 F\n    F F 7 F 19\n    F F 7 F 19`;\n\n\nvar structTabela = {\n    tableName: \"Refap\", \n    tableLink: \"refap23\", \n    firstDay: \"2018-08-01\", \n    firstDayJS: \"\",\n    groups: \"\",\n    daysLines: \"\",\n    //tableData: tabelaRefap23,\n\n    populateTableDate: function(tabelaName) {\n        if (!tabelaName) { tabelaName = \"Refap12x12\"; }\n        this.tableData = tableOpts[tabelaName]; // TODO: automatic load..\n        let newvar = this.tableData.replace(/^\\s+/g,'').split(\"\\n\");\n        let newvar2 = newvar.map(function(k,v) { return k.replace(/^\\s+/g,'').split(\" \"); })\n        this.groups = newvar2[0];\n        newvar2.splice(0,1); // remove index 0 - groups\n        this.daysLines = newvar2;\n        let newDate = this.firstDay.split(\"-\");\n        this.firstDayJS = new Date(newDate[0], newDate[1]-1, newDate[2]);\n        return console.log(this.firstDayJS);\n    },\n    getDayScales: function(dateIn) {\n        let ret = {day: \"\", groups: \"\", schedule: \"\"};\n        let tableSize = this.daysLines.length;\n        let diffDays = dateDiffInDays(this.firstDayJS, dateIn);\n        //console.log(diffDays);\n        let relDiffSize = diffDays / tableSize;\n        let round1 = Math.floor(relDiffSize);\n        let step1 = (relDiffSize-round1).toFixed(6);\n        let step2 = step1 * tableSize;\n        let index1 = Math.round(step2);\n        \n        ret.day = dateIn;\n        ret.groups = this.groups;\n        ret.schedule = this.daysLines[index1];\n        //console.log(diffDays + \"--\" + dateIn);\n        return ret;\n    },\n    getMonthScales: function(dateIn) {\n        let ret = [];\n        let month = dateIn.getMonth();\n        let year = dateIn.getFullYear();\n        let lastDayofMonth = (new Date(year,month+1,0)).getDate();\n        for (let day=1; day <= lastDayofMonth; day++) {\n            let dateDay = new Date(year, month, day, 8,0,0); // 8:00 AM for BUG of daylight saving (DST)\n            let dia = this.getDayScales(dateDay);\n            ret.push(dia);\n        }\n\n        return ret;\n    }\n}\n\nexport default structTabela;"]},"metadata":{},"sourceType":"module"}